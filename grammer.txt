<program> ::= <expr>
<lambda> ::= "lambda" "(" <params> ")" ":" <expr>
<expr> ::= <function_def> | <function_call> | <arith_expr> | <bool_expr> | <lambda> | <rec_expr> | <BOOLEAN>
<function_def> ::= "def" <identifier> "(" <params> ")" ":" <expr>
<params> ::= <identifier> | <identifier> "," <params> | ε
<function_call> ::= <identifier> "(" <args> ")"
<args> ::= <expr> | <expr> "," <args> | ε
<arith_expr> ::= <term> | <arith_expr> '+' <term> | <arith_expr> '-' <term>
<term> ::= <factor> | <term> '*' <factor> | <term> '/' <factor> | <term> '%' <factor>
<factor> ::= <INTEGER> | '(' <expr> ')'
<bool_expr> ::= <comp_expr> | <bool_expr> '&&' <comp_expr> | <bool_expr> '||' <comp_expr> | '!' <comp_expr> | <BOOLEAN>
<comp_expr> ::= <arith_expr> '<' <arith_expr> | <arith_expr> '>' <arith_expr> | <arith_expr> '<=' <arith_expr> | <arith_expr> '>=' <arith_expr> | <arith_expr> '==' <arith_expr> | <arith_expr> '!=' <arith_expr>
<rec_expr> ::= "rec" "(" <function_def> ")"

<INTEGER> ::= <SIGN> <DIGIT>+
<SIGN> ::= '+' | '-' | ε
<DIGIT> ::= '0' | '1' | '2' | '3' | '4' | '5' | '6' | '7' | '8' | '9'
<BOOLEAN> ::= 'True' | 'False'
<identifier> ::= <letter> <alphanumeric>*
<letter> ::= 'a' | 'b' | ... | 'z' | 'A' | 'B' | ... | 'Z'
<alphanumeric> ::= <letter> | <digit>
